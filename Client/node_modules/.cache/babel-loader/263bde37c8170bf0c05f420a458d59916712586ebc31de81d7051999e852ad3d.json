{"ast":null,"code":"var _jsxFileName = \"D:\\\\Codes\\\\ReactJS\\\\BookMySlot-main\\\\BookMySlot-main\\\\Client\\\\src\\\\Pages\\\\Professional-Login-Registration\\\\ProfessionalLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport profimg from \"./meeting.jpg\";\n// import './UserLoginSignin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfessionalLogin = () => {\n  _s();\n  let navigate = useNavigate();\n  const [showLogin, setShowLogin] = useState(true); // Added state to control login form visibility\n  const [showRegister, setShowRegister] = useState(false);\n\n  // // REGISTER API.\n  // const [registerCredentials, setRegisterCredentials] = useState({ email: '', name: '', mobile: '', profession: '', specialisation: '', age: '', gender: '', address: '', city: '', fees: '', timing: '', password: '' });\n  // const onChangeRegister = (e) => {\n  //     setRegisterCredentials({ ...registerCredentials, [e.target.name]: e.target.value });\n  // }\n\n  // const handleRegisterSubmit = async (e) => {\n  //     e.preventDefault();\n  //     if (registerCredentials.password !== registerCredentials.confirmPassword) {\n  //         console.log(credentials);\n  //         toast.error(\"Passwords dont match\");\n  //         return\n  //     }\n  //     try {\n  //         const response = await fetch(`http://localhost:5000/api/authProfessional/createprofessional`, {\n  //             method: \"POST\",\n  //             headers: {\n  //                 \"Content-Type\": \"application/json\"\n  //             },\n  //             body: JSON.stringify({ email: registerCredentials.email, name: registerCredentials.name, mobile: registerCredentials.mobile, profession: registerCredentials.profession, specialisation: registerCredentials.specialisation, age: registerCredentials.age, gender: registerCredentials.gender, address: registerCredentials.address, city: registerCredentials.city, fees: registerCredentials.fees, timing: registerCredentials.timing, password: registerCredentials.password })\n  //         });\n  //         const json = await response.json()\n  //         console.log(json);\n  //         if (json.authToken) {\n  //             // Save the authToken and Redirect.\n  //             localStorage.setItem('token', json.authToken);\n  //             navigate(\"/professional/home\");\n  //             toast.success(\"Account Created Successfully\");\n  //         }\n  //         else {\n  //             toast.error(\"Invalid credentials\");\n  //         }\n  //     } catch (error) {\n  //         toast.error(\"Something went wrong\");\n  //     }\n  // }\n\n  const [registerCredentials, setRegisterCredentials] = useState({\n    email: '',\n    name: '',\n    mobile: '',\n    profession: '',\n    specialisation: '',\n    age: '',\n    gender: '',\n    address: '',\n    city: '',\n    fees: '',\n    startTime: '',\n    endTime: '',\n    eachSlotTime: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const onChangeRegister = e => {\n    setRegisterCredentials({\n      ...registerCredentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleRegisterSubmit = async e => {\n    e.preventDefault();\n    if (registerCredentials.password !== registerCredentials.confirmPassword) {\n      toast.error(\"Passwords don't match\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/authProfessional/createprofessional`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: registerCredentials.name,\n          email: registerCredentials.email,\n          mobile: registerCredentials.mobile,\n          profession: registerCredentials.profession,\n          specialisation: registerCredentials.specialisation,\n          age: registerCredentials.age,\n          gender: registerCredentials.gender,\n          address: registerCredentials.address,\n          city: registerCredentials.city,\n          fees: registerCredentials.fees,\n          // startTime: registerCredentials.startTime,\n          // endTime: registerCredentials.endTime,\n          // eachSlotTime: registerCredentials.eachSlotTime,\n          password: registerCredentials.password\n        })\n      });\n      const json = await response.json();\n      console.log(json);\n      if (json.authToken) {\n        // Save the authToken and Redirect.\n        localStorage.setItem('token', json.authToken);\n        navigate(\"/professional/home\");\n        toast.success(\"Account Created Successfully\");\n      } else {\n        toast.error(\"Invalid credentials\");\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    }\n  };\n\n  // LOGIN API.\n  const [loginCredentials, setLoginCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const onChangeLogin = e => {\n    setLoginCredentials({\n      ...loginCredentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleLoginSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5000/api/authProfessional/loginprofessional`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: loginCredentials.email,\n          password: loginCredentials.password\n        })\n      });\n      const text = await response.text(); // Get the response as text\n\n      // console.log(\"Response from the server:\", text); // Log the response\n\n      const json = JSON.parse(text);\n      console.log(json);\n      if (json.authToken) {\n        // Save the authToken and Redirect.\n        localStorage.setItem('token', json.authToken);\n        toast.success(\"Logged In Successfully\");\n        navigate(\"/professional/home\");\n      } else {\n        console.log(\"HELLLLLLO\");\n        toast.error(\"Invalid credentials\");\n      }\n    } catch (error) {\n      console.log(\"Hello\");\n      toast.error(\"Something went wrong\");\n    }\n  };\n  const toggleRegister = () => {\n    console.log(\"Toggle to Register\");\n    setShowLogin(false);\n    setShowRegister(true);\n  };\n  const toggleLogin = () => {\n    console.log(\"Toggle to Login\");\n    setShowLogin(true);\n    setShowRegister(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"prof-toggle\",\n        className: \"form-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#B9E1DC',\n            color: 'black'\n          },\n          id: \"\",\n          onClick: toggleLogin,\n          children: \"log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#B9E1DC',\n            color: 'black'\n          },\n          id: \"\",\n          onClick: toggleRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-page-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"proff\",\n            className: \"calender-img\",\n            src: profimg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), showLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"login-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLoginSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              onChange: onChangeLogin,\n              defaultValue: loginCredentials.email,\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              onChange: onChangeLogin,\n              defaultValue: loginCredentials.password,\n              placeholder: \"Enter password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"prof-btn\",\n              style: {\n                backgroundColor: '#B9E1DC',\n                color: 'black'\n              },\n              type: \"submit\",\n              className: \"btn login\",\n              children: \"login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"prof-details\",\n              className: \"form-details\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"\",\n                children: \"Forgotten account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 79\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), showRegister && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"signup-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleRegisterSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: registerCredentials.name,\n              onChange: onChangeRegister,\n              placeholder: \"Enter your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: registerCredentials.email,\n              onChange: onChangeRegister,\n              placeholder: \"Enter your email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"mobile\",\n              value: registerCredentials.mobile,\n              onChange: onChangeRegister,\n              placeholder: \"Enter your mobile no.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"profession\",\n              value: registerCredentials.profession,\n              onChange: onChangeRegister,\n              placeholder: \"Select your Profession\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"specialisation\",\n              value: registerCredentials.specialisation,\n              onChange: onChangeRegister,\n              placeholder: \"Enter Specialisation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"age\",\n              value: registerCredentials.age,\n              onChange: onChangeRegister,\n              placeholder: \"Enter your age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"gender\",\n              value: registerCredentials.gender,\n              onChange: onChangeRegister,\n              placeholder: \"Select your gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address\",\n              value: registerCredentials.address,\n              onChange: onChangeRegister,\n              placeholder: \"Enter Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              value: registerCredentials.city,\n              onChange: onChangeRegister,\n              placeholder: \"Enter City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"fees\",\n              value: registerCredentials.fees,\n              onChange: onChangeRegister,\n              placeholder: \"Fees per session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"startTime\",\n              value: registerCredentials.startTime,\n              onChange: onChangeRegister,\n              placeholder: \"Enter Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"endTime\",\n              value: registerCredentials.endTime,\n              onChange: onChangeRegister,\n              placeholder: \"Enter End Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"eachSlotTime\",\n              value: registerCredentials.eachSlotTime,\n              onChange: onChangeRegister,\n              placeholder: \"Enter Total Slot Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: registerCredentials.password,\n              onChange: onChangeRegister,\n              placeholder: \"Enter Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"confirmPassword\",\n              value: registerCredentials.confirmPassword,\n              onChange: onChangeRegister,\n              placeholder: \"Confirm password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"prof-btn\",\n              style: {\n                backgroundColor: '#B9E1DC',\n                color: 'black'\n              },\n              type: \"submit\",\n              className: \"btn signup\",\n              children: \"create account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"prof-details\",\n              className: \"form-details\",\n              children: [\"Clicking \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"create account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 46\n              }, this), \" means that you agree to our\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"\",\n                children: \"terms of services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ProfessionalLogin, \"i3pMXDtcMWGU0cT92Oqi+QTbmZo=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfessionalLogin;\nexport default ProfessionalLogin;\nvar _c;\n$RefreshReg$(_c, \"ProfessionalLogin\");","map":{"version":3,"names":["React","useState","Link","useNavigate","toast","profimg","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfessionalLogin","_s","navigate","showLogin","setShowLogin","showRegister","setShowRegister","registerCredentials","setRegisterCredentials","email","name","mobile","profession","specialisation","age","gender","address","city","fees","startTime","endTime","eachSlotTime","password","confirmPassword","onChangeRegister","e","target","value","handleRegisterSubmit","preventDefault","error","response","fetch","method","headers","body","JSON","stringify","json","console","log","authToken","localStorage","setItem","success","loginCredentials","setLoginCredentials","onChangeLogin","handleLoginSubmit","text","parse","toggleRegister","toggleLogin","children","className","id","style","backgroundColor","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","onSubmit","type","onChange","defaultValue","placeholder","to","_c","$RefreshReg$"],"sources":["D:/Codes/ReactJS/BookMySlot-main/BookMySlot-main/Client/src/Pages/Professional-Login-Registration/ProfessionalLogin.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport profimg from \"./meeting.jpg\"\n// import './UserLoginSignin.css';\n\nconst ProfessionalLogin = () => {\n    let navigate = useNavigate();\n\n    const [showLogin, setShowLogin] = useState(true);  // Added state to control login form visibility\n    const [showRegister, setShowRegister] = useState(false);\n\n    // // REGISTER API.\n    // const [registerCredentials, setRegisterCredentials] = useState({ email: '', name: '', mobile: '', profession: '', specialisation: '', age: '', gender: '', address: '', city: '', fees: '', timing: '', password: '' });\n    // const onChangeRegister = (e) => {\n    //     setRegisterCredentials({ ...registerCredentials, [e.target.name]: e.target.value });\n    // }\n\n    // const handleRegisterSubmit = async (e) => {\n    //     e.preventDefault();\n    //     if (registerCredentials.password !== registerCredentials.confirmPassword) {\n    //         console.log(credentials);\n    //         toast.error(\"Passwords dont match\");\n    //         return\n    //     }\n    //     try {\n    //         const response = await fetch(`http://localhost:5000/api/authProfessional/createprofessional`, {\n    //             method: \"POST\",\n    //             headers: {\n    //                 \"Content-Type\": \"application/json\"\n    //             },\n    //             body: JSON.stringify({ email: registerCredentials.email, name: registerCredentials.name, mobile: registerCredentials.mobile, profession: registerCredentials.profession, specialisation: registerCredentials.specialisation, age: registerCredentials.age, gender: registerCredentials.gender, address: registerCredentials.address, city: registerCredentials.city, fees: registerCredentials.fees, timing: registerCredentials.timing, password: registerCredentials.password })\n    //         });\n    //         const json = await response.json()\n    //         console.log(json);\n    //         if (json.authToken) {\n    //             // Save the authToken and Redirect.\n    //             localStorage.setItem('token', json.authToken);\n    //             navigate(\"/professional/home\");\n    //             toast.success(\"Account Created Successfully\");\n    //         }\n    //         else {\n    //             toast.error(\"Invalid credentials\");\n    //         }\n    //     } catch (error) {\n    //         toast.error(\"Something went wrong\");\n    //     }\n    // }\n\n    const [registerCredentials, setRegisterCredentials] = useState({ email: '', name: '', mobile: '', profession: '', specialisation: '', age: '', gender: '', address: '', city: '', fees: '', startTime: '', endTime: '', eachSlotTime: '', password: '', confirmPassword: '' });\n\n    const onChangeRegister = (e) => {\n        setRegisterCredentials({ ...registerCredentials, [e.target.name]: e.target.value });\n    };\n\n    const handleRegisterSubmit = async (e) => {\n        e.preventDefault();\n        if (registerCredentials.password !== registerCredentials.confirmPassword) {\n            toast.error(\"Passwords don't match\");\n            return;\n        }\n        try {\n            const response = await fetch(`http://localhost:5000/api/authProfessional/createprofessional`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    name: registerCredentials.name,\n                    email: registerCredentials.email,\n                    mobile: registerCredentials.mobile,\n                    profession: registerCredentials.profession,\n                    specialisation: registerCredentials.specialisation,\n                    age: registerCredentials.age,\n                    gender: registerCredentials.gender,\n                    address: registerCredentials.address,\n                    city: registerCredentials.city,\n                    fees: registerCredentials.fees,\n                    // startTime: registerCredentials.startTime,\n                    // endTime: registerCredentials.endTime,\n                    // eachSlotTime: registerCredentials.eachSlotTime,\n                    password: registerCredentials.password\n                })\n            });\n            const json = await response.json();\n            console.log(json);\n            if (json.authToken) {\n                // Save the authToken and Redirect.\n                localStorage.setItem('token', json.authToken);\n                navigate(\"/professional/home\");\n                toast.success(\"Account Created Successfully\");\n            } else {\n                toast.error(\"Invalid credentials\");\n            }\n        } catch (error) {\n            console.log(error);\n            toast.error(\"Something went wrong\");\n        }\n    };\n\n\n    // LOGIN API.\n    const [loginCredentials, setLoginCredentials] = useState({ email: '', password: '' });\n    const onChangeLogin = (e) => {\n        setLoginCredentials({ ...loginCredentials, [e.target.name]: e.target.value });\n    }\n\n\n    const handleLoginSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`http://localhost:5000/api/authProfessional/loginprofessional`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ email: loginCredentials.email, password: loginCredentials.password })\n            });\n            const text = await response.text(); // Get the response as text\n\n            // console.log(\"Response from the server:\", text); // Log the response\n\n            const json = JSON.parse(text);\n            console.log(json);\n            if (json.authToken) {\n                // Save the authToken and Redirect.\n                localStorage.setItem('token', json.authToken);\n                toast.success(\"Logged In Successfully\");\n                navigate(\"/professional/home\");\n            }\n            else {\n                console.log(\"HELLLLLLO\");\n                toast.error(\"Invalid credentials\");\n            }\n        } catch (error) {\n            console.log(\"Hello\");\n            toast.error(\"Something went wrong\");\n        }\n    }\n\n    const toggleRegister = () => {\n        console.log(\"Toggle to Register\");\n        setShowLogin(false);\n        setShowRegister(true);\n    }\n\n    const toggleLogin = () => {\n        console.log(\"Toggle to Login\");\n        setShowLogin(true);\n        setShowRegister(false);\n    }\n    return (\n        <>\n            <div className=\"form-modal\">\n                <div id='prof-toggle' className=\"form-toggle\">\n                    <button style={{ backgroundColor: '#B9E1DC', color: 'black'}} id=\"\" onClick={toggleLogin}>log in</button>\n                    <button style={{ backgroundColor: '#B9E1DC', color: 'black'}} id=\"\" onClick={toggleRegister}>Register</button>\n                </div>\n                <div className='login-page-image'>\n                    <div>\n                        <img id='proff' className='calender-img' src={profimg}></img>\n                    </div>\n                    {showLogin && (\n                        <div id=\"login-form\">\n                            <form onSubmit={handleLoginSubmit}>\n                                <input type=\"email\" name='email' onChange={onChangeLogin} defaultValue={loginCredentials.email} placeholder=\"Enter email\" />\n                                <input type=\"password\" name='password' onChange={onChangeLogin} defaultValue={loginCredentials.password} placeholder=\"Enter password\" />\n                                <button id='prof-btn' style={{ backgroundColor: '#B9E1DC', color: 'black'}} type=\"submit\" className=\"btn login\">login</button>\n                                <p id='prof-details' className='form-details'><Link to=\"\">Forgotten account</Link></p>\n                                {/* <hr /> */}\n                            </form>\n                        </div>\n                    )}\n\n                    {showRegister && (\n                        <div id=\"signup-form\">\n                            {/* <form onSubmit={handleRegisterSubmit}>\n                        <input type=\"text\" name='name' defaultValue={registerCredentials.name} onChange={onChangeRegister} placeholder=\"Enter your name\" />\n                        <input type=\"email\" name='email' defaultValue={registerCredentials.email} onChange={onChangeRegister} placeholder=\"Enter your email\" />\n                        <input type=\"number\" name='mobile' defaultValue={registerCredentials.mobile} onChange={onChangeRegister} placeholder=\"Enter your mobile no.\" />\n                        <input type=\"text\" name='profession' defaultValue={registerCredentials.profession} onChange={onChangeRegister} placeholder=\"Select your Profession\" />\n                        <input type=\"text\" name='specialisation' defaultValue={registerCredentials.specialisation} onChange={onChangeRegister} placeholder=\"Enter Specialisation\" />\n                        <input type=\"number\" name='age' defaultValue={registerCredentials.age} onChange={onChangeRegister} placeholder=\"Enter your age\" />\n                        <input type=\"text\" name='gender' defaultValue={registerCredentials.gender} onChange={onChangeRegister} placeholder=\"Select your gender\" />\n                        <input type=\"text\" name='address' defaultValue={registerCredentials.address} onChange={onChangeRegister} placeholder=\"Enter Address\" />\n                        <input type=\"text\" name='city' defaultValue={registerCredentials.city} onChange={onChangeRegister} placeholder=\"Enter City\" />\n                        <input type=\"number\" name='fees' defaultValue={registerCredentials.fees} onChange={onChangeRegister} placeholder=\"Enter approx fees\" />\n                        <input type=\"text\" name='timing' defaultValue={registerCredentials.timing} onChange={onChangeRegister} placeholder=\"Enter Timing\" />\n                        <input type=\"password\" name='password' defaultValue={registerCredentials.password} onChange={onChangeRegister} placeholder=\"Enter Password\" />\n                        <input type=\"password\" name='confirmPassword' defaultValue={registerCredentials.confirmPassword} onChange={onChangeRegister} placeholder=\"Confirm password\" />\n                        <button id='prof-btn' type=\"submit\" className=\"btn signup\">create account</button>\n                        <p id='prof-details' className='form-details'>Clicking <strong>create account</strong> means that you are agree to our <Link to=\"\">terms of services</Link>.</p>\n                    </form> */}\n                            <form onSubmit={handleRegisterSubmit}>\n                                <input type=\"text\" name=\"name\" value={registerCredentials.name} onChange={onChangeRegister} placeholder=\"Enter your name\" />\n                                <input type=\"email\" name=\"email\" value={registerCredentials.email} onChange={onChangeRegister} placeholder=\"Enter your email\" />\n                                <input type=\"text\" name=\"mobile\" value={registerCredentials.mobile} onChange={onChangeRegister} placeholder=\"Enter your mobile no.\" />\n                                <input type=\"text\" name=\"profession\" value={registerCredentials.profession} onChange={onChangeRegister} placeholder=\"Select your Profession\" />\n                                <input type=\"text\" name=\"specialisation\" value={registerCredentials.specialisation} onChange={onChangeRegister} placeholder=\"Enter Specialisation\" />\n                                <input type=\"number\" name=\"age\" value={registerCredentials.age} onChange={onChangeRegister} placeholder=\"Enter your age\" />\n                                <input type=\"text\" name=\"gender\" value={registerCredentials.gender} onChange={onChangeRegister} placeholder=\"Select your gender\" />\n                                <input type=\"text\" name=\"address\" value={registerCredentials.address} onChange={onChangeRegister} placeholder=\"Enter Address\" />\n                                <input type=\"text\" name=\"city\" value={registerCredentials.city} onChange={onChangeRegister} placeholder=\"Enter City\" />\n                                <input type=\"number\" name=\"fees\" value={registerCredentials.fees} onChange={onChangeRegister} placeholder=\"Fees per session\" />\n                                {/* Modify timing input to accept an array */}\n                                <input type=\"number\" name=\"startTime\" value={registerCredentials.startTime} onChange={onChangeRegister} placeholder=\"Enter Start Time\" />\n                                <input type=\"number\" name=\"endTime\" value={registerCredentials.endTime} onChange={onChangeRegister} placeholder=\"Enter End Time\" />\n                                <input type=\"number\" name=\"eachSlotTime\" value={registerCredentials.eachSlotTime} onChange={onChangeRegister} placeholder=\"Enter Total Slot Time\" />\n                                <input type=\"password\" name=\"password\" value={registerCredentials.password} onChange={onChangeRegister} placeholder=\"Enter Password\" />\n                                <input type=\"password\" name=\"confirmPassword\" value={registerCredentials.confirmPassword} onChange={onChangeRegister} placeholder=\"Confirm password\" />\n                                <button id=\"prof-btn\" style={{ backgroundColor: '#B9E1DC', color: 'black'}} type=\"submit\" className=\"btn signup\">\n                                    create account\n                                </button>\n                                <p id=\"prof-details\" className=\"form-details\">\n                                    Clicking <strong>create account</strong> means that you agree to our{\" \"}\n                                    <Link to=\"\">terms of services</Link>.\n                                </p>\n                                {/* <hr /> */}\n                            </form>\n\n                        </div>\n                    )}\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default ProfessionalLogin"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}